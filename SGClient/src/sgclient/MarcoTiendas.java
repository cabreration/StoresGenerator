/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgclient;

import AGrammar.Lexico;
import AGrammar.Sintactico;
import Logica.Data;
import Logica.Peticiones;
import Logica.Tienda;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringReader;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Javier A. Cabrera
 */
public class MarcoTiendas extends javax.swing.JFrame {

    ArrayList<Integer> codigos = new ArrayList<>();
    boolean modificando;
    boolean registrando;
    /**
     * Creates new form MarcoTiendas
     */
    public MarcoTiendas() {
        initComponents();
        llenarLista();
        modificando = false;
        registrando = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonModificar1 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        botonVer = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonNueva = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        listaTiendas = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        botonProductos = new javax.swing.JButton();
        botonVolver = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        campoCodigo = new javax.swing.JTextField();
        campoNombre = new javax.swing.JTextField();
        campoDireccion = new javax.swing.JTextField();
        campoTelefono = new javax.swing.JTextField();
        campoImagen = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        botonModificar1.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        botonModificar1.setText("Modificar");

        jTextField3.setFont(new java.awt.Font("Noto Serif", 0, 14)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Tiendas");

        jPanel1.setBackground(new java.awt.Color(18, 47, 61));

        jPanel2.setBackground(new java.awt.Color(190, 62, 43));

        jLabel1.setFont(new java.awt.Font("Noto Serif", 1, 24)); // NOI18N
        jLabel1.setText("Acciones");

        botonVer.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        botonVer.setText("Ver");
        botonVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVerActionPerformed(evt);
            }
        });

        botonModificar.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        botonModificar.setText("Modificar");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonEliminar.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonNueva.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        botonNueva.setText("Registrar");
        botonNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevaActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(237, 138, 69));

        listaTiendas.setMaximumRowCount(100);

        jLabel2.setFont(new java.awt.Font("Noto Serif", 1, 24)); // NOI18N
        jLabel2.setText("Tiendas");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listaTiendas, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(41, 41, 41))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addComponent(listaTiendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botonProductos.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        botonProductos.setText("Productos");
        botonProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonProductosActionPerformed(evt);
            }
        });

        botonVolver.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonVer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonNueva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonProductos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonVolver, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(botonVer, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(botonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(botonNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(botonProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(botonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Noto Serif", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Informacion");

        jPanel4.setBackground(new java.awt.Color(18, 47, 61));

        jLabel4.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Codigo:");

        jLabel5.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nombre:");

        jLabel6.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Direccion:");

        jLabel7.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Telefono:");

        jLabel8.setFont(new java.awt.Font("Noto Serif", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Imagen:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(26, 26, 26)
                .addComponent(jLabel5)
                .addGap(27, 27, 27)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addContainerGap())
        );

        campoCodigo.setEditable(false);
        campoCodigo.setBackground(new java.awt.Color(52, 115, 143));
        campoCodigo.setFont(new java.awt.Font("Noto Serif", 0, 14)); // NOI18N
        campoCodigo.setForeground(new java.awt.Color(255, 255, 255));

        campoNombre.setEditable(false);
        campoNombre.setBackground(new java.awt.Color(52, 115, 143));
        campoNombre.setFont(new java.awt.Font("Noto Serif", 0, 14)); // NOI18N
        campoNombre.setForeground(new java.awt.Color(255, 255, 255));

        campoDireccion.setEditable(false);
        campoDireccion.setBackground(new java.awt.Color(52, 115, 143));
        campoDireccion.setFont(new java.awt.Font("Noto Serif", 0, 14)); // NOI18N
        campoDireccion.setForeground(new java.awt.Color(255, 255, 255));

        campoTelefono.setEditable(false);
        campoTelefono.setBackground(new java.awt.Color(52, 115, 143));
        campoTelefono.setFont(new java.awt.Font("Noto Serif", 0, 14)); // NOI18N
        campoTelefono.setForeground(new java.awt.Color(255, 255, 255));

        campoImagen.setEditable(false);
        campoImagen.setBackground(new java.awt.Color(52, 115, 143));
        campoImagen.setFont(new java.awt.Font("Noto Serif", 0, 14)); // NOI18N
        campoImagen.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setText("Buscar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(91, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                                    .addComponent(campoImagen)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoDireccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(57, 57, 57))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(campoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(campoDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(campoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(campoImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVerActionPerformed
        // TODO add your handling code here:
        if (this.modificando) this.modificando = false;
        if (this.registrando) this.registrando = false;
        this.campoNombre.setEditable(false);
        this.campoDireccion.setEditable(false);
        this.campoTelefono.setEditable(false);
        
        Tienda store = buscarTienda(this.listaTiendas.getSelectedIndex());
        if (store == null) return;
        
        this.campoCodigo.setText(String.valueOf(store.getCodigo()));
        this.campoNombre.setText(store.getNombre());
        this.campoDireccion.setText(store.getDireccion());
        this.campoTelefono.setText(String.valueOf(store.getTelefono()));
    }//GEN-LAST:event_botonVerActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        // TODO add your handling code here:
        if (!this.modificando) {
            this.modificando = true;
            this.campoNombre.setEditable(true);
            this.campoDireccion.setEditable(true);
            this.campoTelefono.setEditable(true);
        }
        else {
            if (this.campoNombre.getText().equals("") 
                    || this.campoNombre.getText() == null 
                    || this.campoDireccion.getText().equals("")
                    || this.campoDireccion.getText() == null
                    || this.campoTelefono.getText().equals("")
                    || this.campoTelefono.getText() == null) {
                JOptionPane.showMessageDialog(null, "Todos los campos deben ser llenados", "Stores Generator", JOptionPane.ERROR_MESSAGE);
                return;
            }   
            
            //enviar la peticion al servidor para que modifique desde aqui
            this.modificando = false;
            try {
                Socket socket = new Socket("localhost", 8889);
                PrintWriter salida = new PrintWriter(
                    socket.getOutputStream(),
                    true
                );
                BufferedReader entrada = new BufferedReader(
                    new InputStreamReader(
                            socket.getInputStream()
                    )
                );
                
                String peticion = Peticiones.modificarTienda(this.campoCodigo.getText(),
                        String.valueOf(Data.usuarioActual), this.campoNombre.getText(), this.campoDireccion.getText(),
                        this.campoTelefono.getText());
                
                salida.println(peticion);
                salida.println("fin");
                
                String aux = "";
                String entradaCompleta = "";
                
                try {
                while (!(aux = entrada.readLine()).equals("fin")) 
                {
                    entradaCompleta += aux;
                }
                
                //parsear la cadena de entrada
                //aqui se van a obtener todas las tiendas
                System.out.println(entradaCompleta);
                Reader lector = new StringReader(entradaCompleta);
                Lexico scanner = new Lexico(lector);
                Sintactico parser = new Sintactico(scanner);
                try 
                {
                    parser.parse();
                    if (parser.modTienda) {
                        JOptionPane.showMessageDialog(null, "Se modifico la tienda de forma exitosa",
                                "Stores Generator", JOptionPane.INFORMATION_MESSAGE);
                        
                        //modificamos la informacion local
                        Tienda tempStore = buscarTienda(this.listaTiendas.getSelectedIndex());
                        tempStore.setNombre(this.campoNombre.getText());
                        tempStore.setDireccion(this.campoDireccion.getText());
                        tempStore.setTelefono(Integer.parseInt(this.campoTelefono.getText()));
                    }
                    else 
                        JOptionPane.showMessageDialog(null, "La tienda no fue modificada",
                                "Stores Generator", JOptionPane.ERROR_MESSAGE);
                }
                catch(Exception e) 
                {
                    System.out.println(e);
                    e.printStackTrace();
                }
                
            }
            catch(Exception e) 
            {
                e.printStackTrace();
            }
                socket.close();
            } catch (IOException ex) {
                Logger.getLogger(MarcoTiendas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_botonModificarActionPerformed

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
        Inicio init = new Inicio();
        init.setVisible(true);
    }//GEN-LAST:event_botonVolverActionPerformed

    private void botonNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevaActionPerformed
        // TODO add your handling code here:
        if (!this.registrando) {
            this.campoCodigo.setText("");
            this.campoNombre.setText("");
            this.campoDireccion.setText("");
            this.campoTelefono.setText("");
            this.campoImagen.setText("");
            
            this.campoNombre.setEditable(true);
            this.campoDireccion.setEditable(true);
            this.campoTelefono.setEditable(true);
            this.registrando = true;
        }
        else if (registrando) {
            // construimos una tienda y la mandamos en la peticion
            if (this.campoNombre.getText().equals("") 
                    ||this.campoNombre.getText() == null
                    || this.campoDireccion.getText().equals("")
                    || this.campoDireccion.getText() == null
                    || this.campoTelefono.getText().equals("")
                    || this.campoTelefono.getText() == null) {
                
                JOptionPane.showMessageDialog(null, "Los campos de nombre, direccion y telefono son obligatorios,",
                         "Stores Generator", JOptionPane.ERROR_MESSAGE);
            }
            try {
                Socket socket = new Socket("localhost", 8889);
                PrintWriter salida = new PrintWriter(
                    socket.getOutputStream(),
                    true
                );
                BufferedReader entrada = new BufferedReader(
                    new InputStreamReader(
                            socket.getInputStream()
                    )
                );
                
                Random rand = new Random();
                int codigo = rand.nextInt(2000000000);
                String peticion = "";
                
                if (campoImagen.getText().equals("") || campoImagen.getText() == null)
                    peticion = Peticiones.crearTienda(String.valueOf(codigo), String.valueOf(Data.usuarioActual),
                        this.campoNombre.getText(), this.campoDireccion.getText(), this.campoTelefono.getText(), "imagen por defecto");
                else
                    peticion = Peticiones.crearTienda(String.valueOf(codigo), String.valueOf(Data.usuarioActual),
                        this.campoNombre.getText(), this.campoDireccion.getText(), this.campoTelefono.getText(), this.campoImagen.getText());
                
                Tienda temporal = new Tienda();
                temporal.setCodigo(codigo);
                temporal.setDireccion(this.campoDireccion.getText());
                temporal.setNombre(this.campoNombre.getText());
                temporal.setTelefono(Integer.parseInt(this.campoTelefono.getText()));
                
                salida.println(peticion);
                salida.println("fin");
                
                String entradaCompleta  ="";
                String aux1 = "";
                
                try {
                    while (!(aux1 = entrada.readLine()).equals("fin")) 
                    {
                        entradaCompleta += aux1;
                    }
                    
                    System.out.println(entradaCompleta);
                    Reader lector = new StringReader(entradaCompleta);
                    Lexico scanner = new Lexico(lector);
                    Sintactico parser = new Sintactico(scanner);
                    parser.parse();
                    if (parser.registroTienda) {
                        JOptionPane.showConfirmDialog(null, "Registro exitoso", "Stores Generator", JOptionPane.PLAIN_MESSAGE);
                        this.registrando = false;
                        
                        Data.tiendas.add(temporal);
                        this.listaTiendas.addItem(temporal.getNombre());
                        this.codigos.add(temporal.getCodigo());
                    }
                    else 
                        JOptionPane.showConfirmDialog(null, "Error, intente de nuevo", "Stores Generator", JOptionPane.INFORMATION_MESSAGE);
                } catch(Exception e) {
                    e.printStackTrace();
                }
            socket.close();    
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_botonNuevaActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        // TODO add your handling code here:
        String peticion = Peticiones.eliminarTienda(String.valueOf(this.codigos.get(this.listaTiendas.getSelectedIndex())),
                String.valueOf(Data.usuarioActual));
        
        try {
            Socket socket = new Socket("localhost", 8889);
                PrintWriter salida = new PrintWriter(
                    socket.getOutputStream(),
                    true
                );
                BufferedReader entrada = new BufferedReader(
                    new InputStreamReader(
                            socket.getInputStream()
                    )
                );
                
            salida.println(peticion);
            salida.println("fin");
            
            String entradaCompleta  ="";
            String aux1 = "";
                
            try {
                while (!(aux1 = entrada.readLine()).equals("fin")) 
                    entradaCompleta += aux1;
                    
                    
                System.out.println(entradaCompleta);
                Reader lector = new StringReader(entradaCompleta);
                Lexico scanner = new Lexico(lector);
                Sintactico parser = new Sintactico(scanner);
                parser.parse();
                if (parser.delTienda) {
                    JOptionPane.showConfirmDialog(null, "Se ha eliminado la tienda exitosamente",
                           "Stores Generator", JOptionPane.PLAIN_MESSAGE);
                    
                    Data.tiendas.remove(this.codigos.get(this.listaTiendas.getSelectedIndex()));
                    llenarLista();
                    this.campoCodigo.setText("");
                    this.campoNombre.setText("");
                    this.campoDireccion.setText("");
                    this.campoTelefono.setText("");
                    this.campoImagen.setText("");
                }
                else 
                        JOptionPane.showConfirmDialog(null, "Error, intente de nuevo", "Stores Generator", JOptionPane.INFORMATION_MESSAGE);
                
            } catch(Exception e) {
                e.printStackTrace();
            }
        socket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonProductosActionPerformed
        // TODO add your handling code here
        //mandar a traer los productos
        int tiendaActual = this.codigos.get(this.listaTiendas.getSelectedIndex());
        String peticion = "$request$ $get tipo=\"productos\" propietario = " + Data.usuarioActual + " sucursal = " + tiendaActual + "-$ $request-$";
        
        try {
            Socket socket = new Socket("localhost", 8889);
                PrintWriter salida = new PrintWriter(
                    socket.getOutputStream(),
                    true
                );
                BufferedReader entrada = new BufferedReader(
                    new InputStreamReader(
                            socket.getInputStream()
                    )
                );
                
            salida.println(peticion);
            salida.println("fin");
            
            String entradaCompleta  ="";
            String aux1 = "";
                
            try {
                while (!(aux1 = entrada.readLine()).equals("fin")) 
                    entradaCompleta += aux1;
  
                System.out.println(entradaCompleta);
                Reader lector = new StringReader(entradaCompleta);
                Lexico scanner = new Lexico(lector);
                Sintactico parser = new Sintactico(scanner);
                parser.parse();
                
                this.setVisible(false);
                this.dispose();
                MarcoProductos prods = new MarcoProductos();
                prods.productos = parser.productos;
                prods.llenarListaProductos();
                prods.setVisible(true);
                
            } catch(Exception e) {
                e.printStackTrace();
            }
        socket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }    
        
    }//GEN-LAST:event_botonProductosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarcoTiendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarcoTiendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarcoTiendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarcoTiendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarcoTiendas().setVisible(true);
            }
        });
    }
    
    private void llenarLista() {
        if (this.listaTiendas.getItemCount() > 0) {
            this.listaTiendas.removeAllItems();
            if (this.codigos.size() > 0)
                for (int i = 0; i < this.codigos.size(); i++) {
                    this.codigos.remove(i);
                }
        }
        for (int i = 0; i < Data.tiendas.size(); i++) {
            this.listaTiendas.addItem(Data.tiendas.get(i).getNombre());
            this.codigos.add(Data.tiendas.get(i).getCodigo());
        }
    }
    
    private Tienda buscarTienda(int indice) {
        Tienda aux = null;
        int codigo = this.codigos.get(indice);
        for (int i = 0; i < Data.tiendas.size(); i++) {
            if (Data.tiendas.get(i).getCodigo() == codigo)
                aux = Data.tiendas.get(i);
        }
        return aux;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonModificar1;
    private javax.swing.JButton botonNueva;
    private javax.swing.JButton botonProductos;
    private javax.swing.JButton botonVer;
    private javax.swing.JButton botonVolver;
    private javax.swing.JTextField campoCodigo;
    private javax.swing.JTextField campoDireccion;
    private javax.swing.JTextField campoImagen;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoTelefono;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JComboBox<String> listaTiendas;
    // End of variables declaration//GEN-END:variables
}
